<!--===========================================================================
  This is the build file for the Pentaho Big Data Project
  
  This build file will use the subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See subfloor.xml for more details
============================================================================-->
<project name="Pentaho Big Data Plugin" basedir="." default="dist"
	xmlns:ivy="antlib:org.apache.ivy.ant" >
	
	<description>
	  This build file is used to create the Pentaho Big Data Plugin project
		and works with the subfloor.xml file.
	</description>

	<!-- Import the common_build.xml file which contains all the default tasks -->	
	<import file="build-res/subfloor-pkg.xml"/>

	<property name="libswt" location="libswt" />
	<property name="swt.os" value="win32" />
	<property name="pdi-with-plugin"
					value="pdi-ce-big-data"
					description="Name of the pdi distribution with Big Data plugin"/>

	<property name="plugin.destination" location="kettle-dist" />
	
	<property name="samples.dir" value="${basedir}/samples" />
	
	<property name="package-samples.artifact.ivyfile"
	            value="package-samples-ivy.xml"
	            description="The ivy file defining dependencies of the package" />
    <property name="package-samples.artifact.pomfile"
                value="package-samples-pom.xml"
                description="The Maven pom file defining dependencies of the package" />
	
	
	<!-- override compile.compile to include custom classpath and do resource copying -->
	<target name="compile.compile" depends="init">
	  <javac destdir="${classes.dir}"
	         debug="${javac.debug}"
	         deprecation="${javac.deprecation}"
	         fork="true"
	         source="${javac.source}"
	         target="${javac.target}">
	    <classpath>
	      <path refid="classpath" />
	    </classpath>
	    <src path="${src.dir}" />
	  </javac>
	</target>
	
	<target name="resolve"
	          depends="resolve-default, resolve-test, ivy.check-releasable"
	          description="Retrieves all the dependent libraries" />

	<target name="dist-noresolve" depends="jar,hbase-custom-comparators-jar,package" description="Builds and packages the application" />
	<target name="dist" depends="resolve,jar,hbase-custom-comparators-jar,package" description="Builds and packages the application" />
	
	<target name="clean-dist">
		<delete dir="${dist.dir}" />
		<delete dir="${stage.dir}" />
		<delete dir="${platform.unzip.dir}" />
	</target>

    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN subfloor.xml.
    --> 
	
  <target name="assemble.init">
    <mkdir dir="${stage.dir}" />
  </target>
	
	  <target name="assemble.copy-libs">
	    <copy todir="${stage.dir}/${ivy.artifact.id}/lib">
	      <fileset dir="${lib.dir}">
			<exclude name="kettle-*.jar" />
			<exclude name="pentaho-xul-*.jar" />
			<exclude name="metro-*.jar" />
			<exclude name="log4j-*.jar" />
			<exclude name="jface*.jar" />
			<exclude name="jets3t-*.jar" />
			<exclude name="hadoop-*.jar" />
			<exclude name="hbase-${dependency.pentaho-hbase.revision}.jar" />
			<exclude name="zookeeper-*.jar" />
			<exclude name="jug-*.jar" />
			<exclude name="commons-codec*.jar" />
			<exclude name="commons-io*.jar" />
			<exclude name="commons-lang*.jar" />
			<exclude name="commons-logging*.jar" />
			<exclude name="commons-vfs*.jar" />
			<exclude name="pentaho-hdfs-vfs*.jar" />
			<exclude name="pentaho-s3-vfs*.jar" />
			<exclude name="pentaho-vfs-browser*.jar" />
			<exclude name="scannotation*.jar" />
			<exclude name="dom4j*.jar" />	      	
			<exclude name="jface*.jar" />	      	
			<exclude name="x86*.jar" />	      	
          </fileset>
	    </copy>
	    <copy todir="${stage.dir}/${ivy.artifact.id}">
	      <fileset file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" />
	    </copy>
	  </target>

	<!-- this target builds a kettle release that includes the plugin -->
	<target name="kettle-w-plugin-dist">
    <property name="pdi-dist-root" value="${bin.dir}/kettle-dist/${kettle-distrib-with-plugin-name}"/>
    <delete dir="${bin.dir}/kettle-dist" />
    <!-- Unzip PDI CE -->
		<untar compression="gzip" dest="${pdi-dist-root}" src="${kettle.dist.dir}/${kettle-distrib-artifact-name}.tar.gz"/>
    <!-- Unzip plugin -->
		<unzip src="${dist.dir}/${package.basename}.zip" dest="${pdi-dist-root}/data-integration/plugins"/>
    <!-- Unzip samples -->
    <unzip src="${dist.dir}/${ivy.artifact.id}-samples-${project.revision}.zip" dest="${pdi-dist-root}/data-integration/samples" />

    <tar destfile="${dist.dir}/${kettle-distrib-with-plugin-name}.tar.gz" longfile="gnu" compression="gzip">
      <tarfileset dir="${bin.dir}/kettle-dist" mode="755" excludes="docs/api/** docs/api-core/** **/Thumbs.db">
        <include name="**/*.sh" />
        <include name="**/JavaApplicationStub" />
      </tarfileset>
      <tarfileset dir="${bin.dir}/kettle-dist" excludes="docs/api/** docs/api-core/** **/Thumbs.db">
        <exclude name="**/*.sh" />
        <exclude name="**/JavaApplicationStub" />
      </tarfileset>
    </tar>
    <!-- Zip up new PDI CE with Pentaho Big Data Plugin and Samples -->
		<zip destfile="${dist.dir}/${kettle-distrib-with-plugin-name}.zip">
			<zipfileset dir="${bin.dir}/kettle-dist" filemode="755">
        <include name="**/*.sh" />
        <include name="**/JavaApplicationStub" />
      </zipfileset>
      <zipfileset dir="${bin.dir}/kettle-dist">
        <exclude name="**/*.sh" />
        <exclude name="**/JavaApplicationStub" />
      </zipfileset>
		</zip>
	</target>
	
	<target name="install-plugin">
		<delete dir="${kettle.dist.dir}/libext/pentaho-big-data-plugin"/>
		<delete dir="${kettle.dist.dir}/plugins/pentaho-big-data-plugin"/>
		<unzip dest="${kettle.dist.dir}">
			<fileset file="${dist.dir}/${package.basename}.zip"/>
			</unzip>
	</target>
	
	<target name="publish-local-nojar" depends="install-ivy,subfloor.publish-local-nojar">
	  <ivy:resolve file="${package.artifact.ivyfile}" />
	  <ivy:publish resolver="local" pubrevision="${project.revision}" overwrite="true" forcedeliver="true">
		<artifacts pattern="${dist.dir}/[artifact]-[revision].[ext]" />
	  </ivy:publish>
	  <ivy:resolve file="${package-samples.artifact.ivyfile}" />
	  <ivy:publish resolver="local" pubrevision="${project.revision}" overwrite="true" forcedeliver="true">
	    <artifacts pattern="${dist.dir}/[artifact]-[revision].[ext]" />
	  </ivy:publish>
	</target>
	
	<target name="publish-nojar" depends="subfloor-pkg.publish-nojar">
      <antcall target="maven-publish-artifact">
        <param name="publish.pomFile" value="${package-samples.artifact.pomfile}" />
        <param name="publish.file" value="${dist.dir}/${ivy.artifact.id}-samples-${project.revision}.zip" />
      </antcall>
    </target>
	
	<target name="create-package-pom"
	          depends="install-ivy,subfloor-pkg.create-package-pom"
	          description="Creates a POM file based on the ivy dependencies for a separate package">
      <ivy:makepom ivyfile="${package-samples.artifact.ivyfile}" pomfile="${package-samples.artifact.pomfile}" />
      <replace file="${package-samples.artifact.pomfile}" token="jar" value="zip" />
    </target>
	
	<target name="package" depends="subfloor-pkg.package">
		<zip destfile="${dist.dir}/${ivy.artifact.id}-samples-${project.revision}.zip" basedir="${samples.dir}" />
	</target>

        <target name="hbase-custom-comparators-jar" 
                depends="compile" 
                description="Jars up the custom comparators for use in filtering signed and boolean column values in HBase">
          <jar destfile="${lib.dir}/hbase-comparators-${project.revision}.jar">
            <fileset dir="${classes.dir}" includes="**/*Comparator*"/>
          </jar>
        </target>

	
</project>
